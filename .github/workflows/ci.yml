name: CI

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

env:
  NODE_VERSION: 18
  SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
  SLACK_SIGNING_SECRET: ${{ secrets.SLACK_SIGNING_SECRET }}
  SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Send Slack notification
        uses: codedsolar/slack-action@main
        id: slack
        with:
          status: in-progress
      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install dependencies
        continue-on-error: true
        run: yarn install --ignore-scripts
        env:
          NODE_ENV: development
      - name: Build
        continue-on-error: true
        run: yarn build
        env:
          NODE_ENV: production
      - name: Update Slack notification
        uses: codedsolar/slack-action@main
        if: ${{ always() }}
        with:
          status: ${{ job.status }}
          timestamp: ${{ steps.slack.outputs.slack-timestamp }}

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Send Slack notification
        uses: codedsolar/slack-action@main
        id: slack
        with:
          status: in-progress
      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install dependencies
        run: yarn install --ignore-scripts
        env:
          NODE_ENV: development
      - name: Lint
        continue-on-error: true
        run: yarn lint
      - name: Update Slack notification
        uses: codedsolar/slack-action@main
        if: ${{ always() }}
        with:
          status: ${{ job.status }}
          timestamp: ${{ steps.slack.outputs.slack-timestamp }}

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Send Slack notification
        uses: codedsolar/slack-action@main
        id: slack
        with:
          status: in-progress
          fields: |
            {STATUS}
            {REF}
            Jest passes: Testing...
      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Prepare Code Climate
        if: ${{ !env.ACT }}
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build
      - name: Install dependencies
        run: yarn install --ignore-scripts
        env:
          NODE_ENV: development
      - name: Test
        id: test
        run: |
          yarn test --ci --reporters='./.github/jest-reporter.js'
      - name: Send Codecov report
        if: ${{ !env.ACT }}
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Send Code Climate report
        if: ${{ !env.ACT }}
        run: ./cc-test-reporter after-build --exit-code "$("${SUCCESS}" && echo 0 || echo 1)" --id ${{ secrets.CC_TEST_REPORTER_ID }}
        env:
          SUCCESS: ${{ steps.test.outcome == 'success' }}
      - name: Update Slack notification
        uses: codedsolar/slack-action@main
        if: ${{ always() }}
        with:
          status: ${{ job.status }}
          fields: |
            {STATUS}
            {REF}
            Jest passes: ${{ steps.test.outputs.passed || 0 }} / ${{ steps.test.outputs.total || 0 }} tests
          timestamp: ${{ steps.slack.outputs.slack-timestamp }}
